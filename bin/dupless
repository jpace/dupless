#!/usr/bin/env ruby

dir = File.dirname(File.dirname(File.expand_path(__FILE__)))
libpath = dir + "/lib"
$:.unshift libpath

require 'dupless/file'
require 'dupless/fdprocessor'
require 'dupless/set'
require 'dupless/set_factory'
require 'dupless/entry'
require 'logue'

Logue::Log::level = Logue::Level::DEBUG

module Dupless
  class App < FileDirProcessor
    include Logue::Loggable
    
    def initialize args
      sf = SetFactory.new
      type = :sorted_by_size
      type = :twopass
      @set = sf.set type: type
      super args
    end

    def process_file file 
      df = Dupless::File.new file
      @set << df
    end

    def show_duplicates
      dups = @set.duplicates
      puts "#dups: #{dups.size}"
      return if true
      dups.each do |dup|
        puts "dup: #{dup}"
      end
    end
  end
end

app = Dupless::App.new ARGV
app.show_duplicates
